name: Deploy to EC2 through a bucket using Codedeploy

run-name: Deployment by @${{ github.actor }}

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:8.0
        ports:
          - 27017:27017
# we can add health checks to ensure that mongo is runnning. 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install

      - name: Start server in background
        run: |
          npm start &
          sleep 5

      - name: Access server
        run: curl --fail --max-time 30 http://localhost:3000/

      - name: Start test server in background  
        run: |
          npm run start:test &
          sleep 5

      - name: Access test server
        run: curl --fail --max-time 30 http://localhost:3030/

      - name: Run tests
        run: npm test

      - name: Stop background processes
        run: |
          pkill -f "npm start" || true
          pkill -f "npm run start:test" || true

      - name: Zip application for deployment
        run: |
          mkdir -p artifacts
          zip -r artifacts/app.zip . \
            -x "node_modules/*" ".git/*" "spec/*" "cypress/*" "*.config.js"

      - name: Upload artifact to S3
        run: |
          aws s3 cp artifacts/app.zip s3://${{ secrets.S3_BUCKET }}/app.zip --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Trigger CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_GROUP }} \
            --s3-location bucket=${{ secrets.S3_BUCKET }},bundleType=zip,key=app.zip \
            --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          CODEDEPLOY_APP: ${{ secrets.CODEDEPLOY_APP }}
          CODEDEPLOY_GROUP: ${{ secrets.CODEDEPLOY_GROUP }}
